# https://pre-commit.com/#managing-ci-caches
# https://docs.gitlab.com/ee/ci/caching/#cache-python-dependencies
variables:
  PIP_CACHE_DIR: "${CI_PROJECT_DIR}/.cache/pip"
  PRE_COMMIT_HOME: $CI_PROJECT_DIR/.cache/pre-commit

cache:
  paths:
    - .cache/pip
    - .cache/pre-commit
    - .venv

before_script:
  - pip install poetry
  - poetry config virtualenvs.in-project true
  - poetry install -v --with dev

stages:
  - build
  - test
  - deploy

lint:
  stage: build
  image: python:3.11-bullseye
  script:
    - poetry run pre-commit install
    - poetry run pre-commit run --all-files

.pandoc-download: &pandoc-download |
  export PANDOC_VER=2.19.2
  wget -q https://github.com/jgm/pandoc/releases/download/$PANDOC_VER/pandoc-$PANDOC_VER-linux-amd64.tar.gz
  tar xzf pandoc-$PANDOC_VER-linux-amd64.tar.gz
  mv pandoc-$PANDOC_VER/bin/pandoc /usr/local/bin/

doc:
  stage: build
  image: python:3.11-bullseye
  script:
    - *pandoc-download
    - cd doc
    - poetry run make html
  artifacts:
    paths:
      - doc/build/
    when: on_success
    expire_in: 2h
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_MESSAGE =~ /build_docs/

test:
  stage: test
  image: python:3.11-bullseye
  script:
    - poetry run pytest tests --junitxml=tests/report.xml
  artifacts:
    when: always
    reports:
      junit: tests/report.xml
  rules:
    - if: $CI_COMMIT_MESSAGE =~ /run_tests/

pages:
  stage: deploy
  image: debian:latest
  before_script: []
  script:
      - mv doc/build/html public
  artifacts:
    paths:
      - public
  rules:
  - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  - if: $CI_COMMIT_MESSAGE =~ /build_docs/




# publish-package:
#   stage: publish
#   image: python:3.11-bullseye
#   script:
#     - poetry config repositories.gitlab "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi"
#     - poetry config http-basic.gitlab gitlab-ci-token $CI_JOB_TOKEN
#     - poetry build
#     - poetry publish -r gitlab
#   rules:
#     - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
#   needs:
#     - pages   # wait for docs to build first
#   artifacts:
#     paths:
#       - dist/*.whl
#       - dist/*.tar.gz
