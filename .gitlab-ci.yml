# https://pre-commit.com/#managing-ci-caches
# https://docs.gitlab.com/ee/ci/caching/#cache-python-dependencies
# -------------------------
# Global defaults
# -------------------------
default:
  image: python:3.11
  before_script:
    - pip install --upgrade pip
    - pip install poetry
    - poetry config virtualenvs.in-project true
    - poetry install -vv --with dev
  cache:
    key: "${CI_PROJECT_NAME}-${CI_COMMIT_REF_SLUG}"
    paths:
      - .cache/pip
      - .cache/pre-commit
      - .venv

stages:
  - build
  - test
  - deploy

# -------------------------
# Build job template
# -------------------------
.build_base: &build_base
  stage: build
  rules:
    # run on default branch commits or if commit message requests it
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_MESSAGE =~ /build_docs/

# -------------------------
# Linting (pre-commit)
# -------------------------
lint:
  <<: *build_base
  script:
    - poetry run pre-commit install --install-hooks
    - poetry run pre-commit run --all-files

# -------------------------
# Documentation build
# -------------------------
doc:
  <<: *build_base
  image: python:3.11-slim-bookworm
  script:
    - apt-get update && apt-get install -y --no-install-recommends pandoc
    - cd doc
    - poetry run make html
  artifacts:
    paths:
      - doc/build/html
    when: on_success
    expire_in: 2h

# -------------------------
# Test suite
# -------------------------
test:
  stage: test
  rules:
    - if: $CI_COMMIT_MESSAGE =~ /run_tests/
  script:
    - poetry run pytest tests --junitxml=tests/report.xml
  artifacts:
    when: always
    reports:
      junit: tests/report.xml

# -------------------------
# Pages deployment
# -------------------------
pages:
  stage: deploy
  image: debian:stable
  needs:
    - job: doc
      artifacts: true
  script:
    # Move the generated HTML into 'public/' for GitLab Pages
    - mv doc/build/html public
  artifacts:
    paths:
      - public
  rules:
    # Only run when docs were built on the default branch
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: always
    - when: never





# publish-package:
#   stage: publish
#   image: python:3.11-bullseye
#   script:
#     - poetry config repositories.gitlab "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi"
#     - poetry config http-basic.gitlab gitlab-ci-token $CI_JOB_TOKEN
#     - poetry build
#     - poetry publish -r gitlab
#   rules:
#     - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
#   needs:
#     - pages   # wait for docs to build first
#   artifacts:
#     paths:
#       - dist/*.whl
#       - dist/*.tar.gz
